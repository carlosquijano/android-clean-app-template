/**
 * The first section in the build configuration applies the Android Gradle plugin
 * to this build and makes the android block available to specify
 * Android-specific build options.
 */
plugins {
    id 'com.android.application'
    id 'org.jetbrains.kotlin.android'
    id 'com.google.dagger.hilt.android'
    id 'com.diffplug.spotless'
    id 'kotlin-kapt'
}

apply from: '../spotless/spotless.gradle'

/**
 * The android block is where you configure all your Android-specific
 * build options.
 */
android {
    /**
     * The app's namespace. Used primarily to access app resources.
     */
    namespace 'io.github.cq.jetpackcompose.app.ui'

    /**
     * compileSdk specifies the Android API level Gradle should use to
     * compile your app. This means your app can use the API features included in
     * this API level and lower.
     */
    compileSdk 33

    /**
     * The defaultConfig block encapsulates default settings and entries for all
     * build variants and can override some attributes in main/AndroidManifest.xml
     * dynamically from the build system. You can configure product flavors to override
     * these values for different versions of your app.
     */
    defaultConfig {
        // Uniquely identifies the package for publishing.
        applicationId "io.github.cq.jetpackcompose.app.ui"

        // Defines the minimum API level required to run the app.
        minSdk 24

        // Specifies the API level used to test the app.
        targetSdk 33

        // Defines the version number of your app.
        versionCode 1

        // Defines a user-friendly version name for your app.
        versionName rootProject.file("VERSION").text.trim()

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        vectorDrawables {
            useSupportLibrary true
        }
    }

    /**
     * The buildTypes block is where you can configure multiple build types.
     * By default, the build system defines two build types: debug and release. The
     * debug build type is not explicitly shown in the default build configuration,
     * but it includes debugging tools and is signed with the debug key. The release
     * build type applies ProGuard settings and is not signed by default.
     */
    buildTypes {
        /**
         * By default, Android Studio configures the release build type to enable code
         * shrinking, using minifyEnabled, and specifies the default ProGuard rules file.
         */
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    kotlinOptions {
        jvmTarget = '1.8'
    }

    buildFeatures {
        compose true
    }

    composeOptions {
        kotlinCompilerExtensionVersion '1.4.0'
    }

    packagingOptions {
        resources {
            excludes += '/META-INF/{AL2.0,LGPL2.1}'
        }
    }
}

/**
 * The dependencies block in the module-level build configuration file
 * specifies dependencies required to build only the module itself.
 */
dependencies {
    // project
    implementation project(":data")

    // android core
    implementation "androidx.core:core-ktx:$ktx_version"
    implementation "androidx.lifecycle:lifecycle-runtime-ktx:$lifecycle_runtime_ktx_version"

    // android compose
    implementation "androidx.compose.ui:ui:$compose_version"
    implementation "androidx.compose.ui:ui-tooling-preview:$compose_version"
    implementation "androidx.activity:activity-compose:$activity_compose_version"

    // material 3
    implementation "androidx.compose.material3:material3:$material3_version"
    implementation "androidx.compose.material3:material3-window-size-class:$material3_version"
    implementation 'androidx.compose.material:material-icons-extended:1.4.0'

    // navigation
    implementation "androidx.navigation:navigation-runtime-ktx:$navigation_compose_version"
    implementation "androidx.navigation:navigation-compose:$navigation_compose_version"
    implementation "androidx.hilt:hilt-navigation-compose:$android_hilt_version"

    // google dagger hilt
    implementation "com.google.dagger:hilt-android:$dagger_hilt_version"
    kapt "com.google.dagger:hilt-android-compiler:$dagger_hilt_version"

    // test
    testImplementation "junit:junit:$junit_version"
    testImplementation "com.google.dagger:hilt-android-testing:$dagger_hilt_version"

    // instrumentation test
    androidTestImplementation "androidx.test.ext:junit:$android_junit_version"
    androidTestImplementation "androidx.test.espresso:espresso-core:$espresso_version"
    androidTestImplementation "androidx.compose.ui:ui-test-junit4:$compose_version"
    androidTestImplementation "com.google.dagger:hilt-android-testing:$dagger_hilt_version"

    // kapt test
    kaptTest "com.google.dagger:hilt-android-compiler:$dagger_hilt_version"
    kaptAndroidTest "com.google.dagger:hilt-android-compiler:$dagger_hilt_version"

    // debug
    debugImplementation "androidx.compose.ui:ui-tooling:$compose_version"
    debugImplementation "androidx.compose.ui:ui-test-manifest:$compose_version"
}
